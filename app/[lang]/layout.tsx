import { SpeedInsights } from '@vercel/speed-insights/next';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';
import Head from 'next/head';
import Footer from '../components/commons/Footer';
import Header from '../components/commons/Header';
import { AppProvider } from '../context/AppContext';
import '../globals.css';

const interSans = Inter({
    variable: '--font-geist-sans',
    subsets: ['latin'],
});

export const metadata: Metadata = {
    title: 'LDT',
    description: 'Generated by create next app',
};

export default async function RootLayout({
    children,
    params,
}: Readonly<{
    children: React.ReactNode;
    params: { lang: string };
}>) {
    const { lang } = await params;

    return (
        <AppProvider>
            <html lang={lang}>
                <Head>
                    {/* Adding the Heap script here */}
                    <script
                        type="text/javascript"
                        dangerouslySetInnerHTML={{
                            __html: `
                                window.heapReadyCb=window.heapReadyCb||[],window.heap=window.heap||[],heap.load=function(e,t){
                                window.heap.envId=e,window.heap.clientConfig=t=t||{},window.heap.clientConfig.shouldFetchServerConfig=!1;
                                var a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src="https://cdn.us.heap-api.com/config/"+e+"/heap_config.js";
                                var r=document.getElementsByTagName("script")[0];r.parentNode.insertBefore(a,r);
                                var n=["init","startTracking","stopTracking","track","resetIdentity","identify","getSessionId","getUserId","getIdentity","addUserProperties","addEventProperties","removeEventProperty","clearEventProperties","addAccountProperties","addAdapter","addTransformer","addTransformerFn","onReady","addPageviewProperties","removePageviewProperty","clearPageviewProperties","trackPageview"],
                                i=function(e){return function(){var t=Array.prototype.slice.call(arguments,0);window.heapReadyCb.push({name:e,fn:function(){heap[e]&&heap[e].apply(heap,t)}})}};
                                for(var p=0;p<n.length;p++)heap[n[p]]=i(n[p]);
                                };
                                heap.load("810388163");
                            `,
                        }}
                    />
                </Head>
                <body
                    className={`${interSans.className} antialiased`}
                >
                    <Header />
                    <main className="main-wrapper">
                        {children}
                    </main>
                    <SpeedInsights />
                    <Footer />
                </body>
            </html>
        </AppProvider>
    );
}
